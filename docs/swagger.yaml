basePath: /api
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  handler.ConfirmLoginRequest:
    properties:
      code:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  handler.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  handler.RegisterRequest:
    properties:
      confirmPassword:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  handler.SMSLoginRequest:
    properties:
      phone:
        type: string
    type: object
  handler.TokenResponse:
    properties:
      token:
        type: string
    type: object
  handler.createGroupRequest:
    properties:
      name:
        type: string
      user_ids:
        items:
          type: integer
        type: array
    type: object
  handler.sendMessageRequest:
    properties:
      message:
        type: string
      receiver_id:
        type: integer
    type: object
  model.Chat:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      messages:
        items:
          $ref: '#/definitions/model.Message'
        type: array
      name:
        description: опционально — имя группового чата
        type: string
      updatedAt:
        type: string
      users:
        items:
          $ref: '#/definitions/model.User'
        type: array
    type: object
  model.Message:
    properties:
      chatID:
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      message:
        type: string
      senderID:
        type: integer
      updatedAt:
        type: string
    type: object
  model.User:
    properties:
      chats:
        items:
          $ref: '#/definitions/model.Chat'
        type: array
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      password:
        type: string
      phone:
        description: такого формата мб 8-900-800-55-55
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  response.ErrorResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server.
  title: BBBAB Messenger
  version: "0.1"
paths:
  /chat/create:
    post:
      consumes:
      - application/json
      description: Create a new group chat with users
      operationId: create-group-chat
      parameters:
      - description: Auth Token
        in: header
        name: Bearer
        required: true
        type: string
      - description: Group Data
        in: body
        name: groupData
        required: true
        schema:
          $ref: '#/definitions/handler.createGroupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Chat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Create group chat
  /confirmlogin:
    post:
      consumes:
      - application/json
      description: Validate phone code and either create a new user or log into existing
      operationId: confirmlogin
      parameters:
      - description: Confirm Login data
        in: body
        name: confirmLoginData
        required: true
        schema:
          $ref: '#/definitions/handler.ConfirmLoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Confirm Login
  /initlogin:
    post:
      consumes:
      - application/json
      description: Init SMS login procedure
      operationId: initlogin
      parameters:
      - description: Login data
        in: body
        name: loginData
        required: true
        schema:
          $ref: '#/definitions/handler.SMSLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: InitLogin
  /login:
    post:
      consumes:
      - application/json
      description: Loing into account
      operationId: login
      parameters:
      - description: Login data
        in: body
        name: loginData
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Login
  /register:
    post:
      consumes:
      - application/json
      description: Register an account
      operationId: register
      parameters:
      - description: Register data
        in: body
        name: registerData
        required: true
        schema:
          $ref: '#/definitions/handler.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Register
  /search/{prompt}:
    get:
      description: Search users by username
      operationId: search-user
      parameters:
      - description: Search Prompt
        in: path
        name: prompt
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Search users
  /sendmessage:
    post:
      consumes:
      - application/json
      description: Send messages between two users only (for now)
      operationId: send-message
      parameters:
      - description: Auth Token
        in: header
        name: Bearer
        required: true
        type: string
      - description: Message Data
        in: body
        name: msgData
        required: true
        schema:
          $ref: '#/definitions/handler.sendMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Send message to user
  /user/{id}:
    get:
      description: Get user by id
      operationId: get-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get user
swagger: "2.0"
