swagger: "2.0"
info:
  description: This is a sample server.
  title: BBBAB Messenger
  version: "0.1"
host: localhost:8080
basePath: /
schemes:
  - http
definitions:
  gorm.DeletedAt:
    type: object
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  handler.ConfirmLoginRequest:
    properties:
      code:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  handler.LoginRequest:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  handler.RegisterRequest:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      confirmPassword:
        type: string
    type: object
  handler.SMSLoginRequest:
    properties:
      phone:
        type: string
      message:
        type: string
  handler.TokenResponse:
    type: object
    properties:
      token:
        type: string
  handler.CreateGroupChatRequest:
    type: object
    properties:
      name:
        type: string
        example: "Friends"
      user_ids:
        type: array
        items:
          type: integer
        example: [2,3]
  handler.SendMessageRequest:
    type: object
    properties:
      message:
        type: string
        example: "Hello world!"
      receiver_id:
        type: integer
        description: "For 1-on-1 messages"
      chat_id:
        type: integer
        description: "For group chat messages"
  model.Chat:
    type: object
    properties:
      id:
        type: integer
      createdAt:
        type: string
      updatedAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      users:
        type: array
        items:
          $ref: '#/definitions/model.User'
      messages:
        type: array
        items:
          $ref: '#/definitions/model.Message'
  model.Message:
    type: object
    properties:
      id:
        type: integer
      chatID:
        type: integer
      senderID:
        type: integer
      message:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
  model.User:
    type: object
    properties:
      id:
        type: integer
      username:
        type: string
      password:
        type: string
      phone:
        description: такого формата мб 8-900-800-55-55
        type: string
      updatedAt:
      createdAt:
        type: string
      updatedAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      chats:
        type: array
        items:
          $ref: '#/definitions/model.Chat'
  response.ErrorResponse:
    type: object
    properties:
      message:
        type: string
paths:
  /chat/{id}:
    get:
      summary: Get messages
      description: Get messages for chat
      operationId: get-messages
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Chat ID
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/model.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get messages
  /confirmlogin:
    post:
      consumes:
      - application/json
      description: Validate phone code and either create a new user or log into existing
      operationId: confirmlogin
      parameters:
      - description: Confirm Login data
        in: body
        name: confirmLoginData
        required: true
        schema:
          $ref: '#/definitions/handler.ConfirmLoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Confirm Login
  /initlogin:
    post:
      consumes:
      - application/json
      description: Init SMS login procedure
      operationId: initlogin
      parameters:
      - description: Login data
        in: body
        name: loginData
        required: true
        schema:
          $ref: '#/definitions/handler.SMSLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: InitLogin
  /login:
    post:
      summary: Create group chat
      description: Create a new group chat
      operationId: create-group-chat
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: groupChatData
          required: true
          description: Group chat data
          schema:
            $ref: '#/definitions/handler.CreateGroupChatRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Chat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
  /login:
    post:
      summary: Login
      description: Login into account
      operationId: login
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: loginData
          required: true
          schema:
            $ref: '#/definitions/handler.LoginRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
  /register:
    post:
      summary: Register
      description: Register an account
      operationId: register
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: registerData
          required: true
          schema:
            $ref: '#/definitions/handler.RegisterRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
  /search/{prompt}:
    get:
      summary: Search users
      description: Search users by username
      operationId: search-user
      parameters:
        - in: path
          name: prompt
          required: true
          type: string
          description: Search prompt
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/model.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
  /sendmessage:
    post:
      summary: Send message
      description: Send message to chat (direct or group)
      operationId: send-message
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          description: "Bearer token"
        - in: body
          name: MessageData
          required: true
          schema:
            $ref: '#/definitions/handler.SendMessageRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Send message
  /sms:
    post:
      summary: Send SMS
      description: Send SMS to phone number
      operationId: sms
      consumes:
        - application/json
      parameters:
        - in: body
          name: smsData
          required: true
          schema:
            $ref: '#/definitions/handler.SMSRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
  /user/{id}:
    get:
      summary: Get user
      description: Get user by id
      operationId: get-user
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: User ID
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
